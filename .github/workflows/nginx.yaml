name: Build, Push Nginx to NHN Cloud NCR, and Deploy with ArgoCD

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # GitHub repository checkout
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Docker
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Generate a unique image tag based on timestamp and commit SHA
    - name: Generate Image Tag
      id: image-tag
      run: |
        TIMESTAMP=$(date +%Y%m%d%H%M%S)
        SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)
        IMAGE_TAG="nginx:${TIMESTAMP}-${SHORT_SHA}"
        echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV

    # Login to NHN Cloud NCR
    - name: Login to NHN Cloud NCR
      run: |
        echo "${{ secrets.NHN_NCR_PASSWORD }}" | docker login -u "${{ secrets.NHN_NCR_USERNAME }}" --password-stdin 4e06a9e9-kr1-registry.container.nhncloud.com/ncr-for-web

    # Build Nginx Docker image with the generated tag
    - name: Build Nginx Docker Image
      run: |
        docker build -t 4e06a9e9-kr1-registry.container.nhncloud.com/ncr-for-web/${{ env.IMAGE_TAG }} .

    # Push Docker image to NHN Cloud NCR with the generated tag
    - name: Push to NHN Cloud NCR
      run: |
        docker push 4e06a9e9-kr1-registry.container.nhncloud.com/ncr-for-web/${{ env.IMAGE_TAG }}

    # Setup Kustomize
    - name: Setup Kustomize
      uses: imranismail/setup-kustomize@v1

    - name: Checkout kustomize repository
      uses: actions/checkout@v2
      with:
        repository: netsoul-test/k8s-manifests
        ref: main
        token: ${{ secrets.ACTION_TOKEN }}
        path: k8s-manifests
      
    - name: Setup Git identity
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
      working-directory: ${{ github.workspace }}/k8s-manifests

    # Generate Kustomize manifests
    - name: Generate Kustomize manifests
      run: |
        kustomize build k8s-manifests/base > k8s-manifests/base/generated.yaml

    # Update image tag in Kustomize manifests
    - name: Update Image Tag in Kustomize
      run: |
        sed -i "s|image:.*|image: 4e06a9e9-kr1-registry.container.nhncloud.com/ncr-for-web/${{ env.IMAGE_TAG }}|" k8s-manifests/base/generated.yaml

    # Install ArgoCD CLI
    - name: Install ArgoCD CLI
      run: |
        curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
        chmod +x argocd-linux-amd64
        mv argocd-linux-amd64 /usr/local/bin/argocd

    # Login to ArgoCD
    - name: ArgoCD Login
      run: |
        argocd login ${{ secrets.ARGOCD_SERVER }} --username ${{ secrets.ARGOCD_USERNAME }} --password ${{ secrets.ARGOCD_PASSWORD }} --insecure

    # Sync application with ArgoCD
    - name: Sync Application with ArgoCD
      run: |
        argocd app sync cicd-pipeline --prune
